name: Build Test and Deploy
on:
  push:
    branches:
      - "main"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install packages
      run: yarn install

    - name: Build and test
      run: yarn test


  deploy-and-push-docker-image:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Declare some variables
      id: vars
      shell: bash
      run: |
        echo "to-do-app:main-$(git rev-parse --short HEAD)"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"


    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/to-do-app:main-${{ steps.vars.outputs.sha_short }}


    # - name: Build and push
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     file: ./Dockerfile
    #     push: true
    #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/to-do-app:main-${{ steps.vars.outputs.sha_short }}

    # - name: Docker cache layers                              
    #   uses: actions/cache@v2                                 
    #   with:                                                  
    #     path: /tmp/.buildx-cache                             
    #     key: ${{ runner.os }}-single-buildx-${{ github.sha }}
    #     restore-keys: |                                      
    #       ${{ runner.os }}-single-buildx 

    # - name: Build & Push Image                                                                                      
    #   env:                                                                                                          
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}                                                       
    #     RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.RELEASE_REVISION }}
    #   run: |
    #     docker buildx create --use

    #     docker buildx build \                                
    #       --cache-from=type=local,src=/tmp/.buildx-cache \   
    #       --cache-to=type=local,dest=/tmp/.buildx-cache-new \
    #       --tag ${{ env.RELEASE_IMAGE }} \  
    #       --target release \                                 
    #       --push \                                           
    #       .                                                  

    #     rm -rf /tmp/.buildx-cache
    #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  # release: 
  #   needs: deploy-and-push-docker-image
  #   runs-on: ubuntu-latest

  #   steps:                                    
  #   - name: Checkout                                  
  #     uses: actions/checkout@v2

  #   - name: Configure AWS credentials                          
  #     uses: aws-actions/configure-aws-credentials@v1           
  #     with:                                                    
  #       aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}        
  #       aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ env.AWS_REGION }}

  #   - name: Login to Amazon ECR            
  #     id: login-ecr                        
  #     uses: aws-actions/amazon-ecr-login@v1